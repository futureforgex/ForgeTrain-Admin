type Tutorial @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  tutorialId: String!
  topicId: String!
  title: String!
  subtitle: String
  coverImageUrl: String
  altText: String
  estimatedTimeMins: Int
  readingLevel: String
  preferredLearningStyle: [String]
  storyContext: String
  learningObjectives: [String]
  prerequisites: [String]
  biteSizeSections: [BiteSizeSection]
  keyTakeaways: [String]
  funFact: String
  reflectionPrompt: String
  discussionThreadUrl: String
  progressBadge: String
  xpPoints: Int
  streakMultiplier: Boolean
  milestoneBadges: [String]
  spacedRepetitionId: String
  nextTutorialId: String
  body: String
  metaDescription: String
  category: String
  tags: [String]
  status: String
  publishDate: AWSDateTime
  introduction: String
  conclusion: String
  images: [Image]
  diagrams: [Image]
  downloadableAssets: [Asset]
  codeSnippets: [CodeSnippet]
  slug: String
  estimatedReadTime: Int
  filledSummary: String
  builtInPoints: [String]
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type BiteSizeSection {
  sectionId: String!
  heading: String!
  contentMd: String
  humorTip: String
  mnemonic: String
  codeSnippet: CodeSnippetData
  challengePrompt: String
  sectionQuiz: [QuizQuestion]
  playgroundEmbedId: String
  autoCheckSnippet: Boolean
}

type CodeSnippetData {
  language: String
  code: String
  explanations: [String]
}

type QuizQuestion {
  question: String!
  options: [String]!
  correctAnswer: Int!
  explanation: String
}

type Image {
  url: String!
  alt: String!
}

type Asset {
  url: String!
  name: String!
  type: String!
}

type CodeSnippet {
  url: String!
  name: String!
}

type Drive @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  company: String!
  driveTitle: String!
  driveType: String
  description: String
  startDate: AWSDate
  endDate: AWSDate
  location: String
  remote: Boolean
  appLink: String
  branches: [String]
  years: [String]
  cgpa: String
  backlog: String
  regWindow: String
  seatCap: String
  notify: Boolean
  notifTemplate: String
  reminders: [String]
  approval: String
  visibility: String
  module: String
  thumbnailUrl: String
  status: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type Quiz @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  title: String!
  slug: String
  description: String
  category: String
  totalTime: Int
  passingScore: Int
  tags: [String]
  questions: [QuizQuestion]
  settings: QuizSettings
  status: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type QuizSettings {
  allowRetake: Boolean
  showResults: Boolean
  timeLimit: Int
  shuffleQuestions: Boolean
}

type College @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  name: String!
  code: String
  type: String
  website: String
  logo: String
  address: Address
  contact: Contact
  status: String
  hasDepartments: Boolean
  notes: String
  departments: [String]
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type Address {
  line1: String
  line2: String
  city: String
  state: String
  pinCode: String
}

type Contact {
  name: String
  email: String
  phone: String
}

type Announcement @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  title: String!
  content: String!
  category: String
  priority: String
  targetAudience: [String]
  publishDate: AWSDateTime
  expiryDate: AWSDateTime
  status: String
  createdBy: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type Leaderboard @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  id: ID!
  userId: String!
  username: String!
  totalPoints: Int
  rank: Int
  badges: [String]
  achievements: [String]
  streakDays: Int
  lastActivity: AWSDateTime
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  owner: String
}

type Analytics @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  eventType: String!
  userId: String
  sessionId: String
  pageUrl: String
  referrer: String
  userAgent: String
  ipAddress: String
  eventData: String
  createdAt: AWSDateTime
  owner: String
} 